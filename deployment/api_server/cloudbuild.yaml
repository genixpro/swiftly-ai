steps:
- name: 'gcr.io/cloud-builders/docker'
  id: Build API Server Docker Image
  args:
    - "build"
    - "."
    - "-t"
    - "gcr.io/swiftly-2020/swiftly:$REVISION_ID-$_SWIFTLY_ENV-api"
    - "--build-arg"
    - "SWIFTLY_ENV=$_SWIFTLY_ENV"
    - "-f"
    - "deployment/api_server/Dockerfile"
  timeout: 7200s
- name: 'gcr.io/cloud-builders/docker'
  id: Push the API Server
  args:
    - "push"
    - "gcr.io/swiftly-2020/swiftly:$REVISION_ID-$_SWIFTLY_ENV-api"
  timeout: 7200s
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'cluster-info'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
  timeout: 30s
- name: 'gcr.io/cloud-builders/gcloud'
  id: Update Deployment on Kubernetes
  entrypoint: /bin/bash
  args:
  - "./deployment/api_server/update_api_server.sh"
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
  - 'SWIFTLY_ENV=$_SWIFTLY_ENV'
  - 'REVISION_ID=$REVISION_ID'
  timeout: 600s
- name: 'gcr.io/cloud-builders/gcloud'
  id: Run Migration Job
  entrypoint: /bin/bash
  args:
  - "./deployment/api_server/run_migration_job.sh"
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
  - 'SWIFTLY_ENV=$_SWIFTLY_ENV'
  - 'REVISION_ID=$REVISION_ID'
  timeout: 600s
- name: 'gcr.io/cloud-builders/gcloud'
  id: Update Demo CronJob
  entrypoint: /bin/bash
  args:
  - "./deployment/api_server/update_demo_reset.sh"
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'
  - 'SWIFTLY_ENV=$_SWIFTLY_ENV'
  - 'REVISION_ID=$REVISION_ID'
  timeout: 600s
timeout: 15000s


